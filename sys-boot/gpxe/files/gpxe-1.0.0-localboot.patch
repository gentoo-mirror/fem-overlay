diff -Naur work_old/gpxe-1.0.0/src/config/config.c work/gpxe-1.0.0/src/config/config.c
--- work_old/gpxe-1.0.0/src/config/config.c	2010-04-21 10:28:01.000000000 +0200
+++ work/gpxe-1.0.0/src/config/config.c	2010-04-21 10:28:16.000000000 +0200
@@ -234,6 +234,9 @@
 #ifdef PXE_CMD
 REQUIRE_OBJECT ( pxe_cmd );
 #endif
+#ifdef WAITFORKEY_CMD
+REQUIRE_OBJECT ( waitforkey_cmd );
+#endif
 
 /*
  * Drag in miscellaneous objects
diff -Naur work_old/gpxe-1.0.0/src/config/general.h work/gpxe-1.0.0/src/config/general.h
--- work_old/gpxe-1.0.0/src/config/general.h	2010-04-21 10:28:01.000000000 +0200
+++ work/gpxe-1.0.0/src/config/general.h	2010-04-21 10:28:16.000000000 +0200
@@ -121,6 +121,8 @@
 #undef	DIGEST_CMD		/* Image crypto digest commands */
 //#undef	PXE_CMD			/* PXE commands */
 
+#define	WAITFORKEY_CMD		/* waitforkey command, exists script if no key is pressed */
+
 /*
  * Error message tables to include
  *
diff -Naur work_old/gpxe-1.0.0/src/hci/commands/waitforkey_cmd.c work/gpxe-1.0.0/src/hci/commands/waitforkey_cmd.c
--- work_old/gpxe-1.0.0/src/hci/commands/waitforkey_cmd.c	1970-01-01 01:00:00.000000000 +0100
+++ work/gpxe-1.0.0/src/hci/commands/waitforkey_cmd.c	2010-04-21 10:28:16.000000000 +0200
@@ -0,0 +1,36 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <gpxe/command.h>
+#include <gpxe/shell_banner.h>
+
+FILE_LICENCE ( GPL2_OR_LATER );
+
+void waitforkey_usage(char** argv, char* msg) {	
+	printf ( "Usage:\n"
+		 "  %s <delay>\n"
+		 "\n"
+		 "Aborts script if no key is pressed\n"
+		"%s\n",
+		 argv[0], msg );
+}
+
+static int waitforkey_exec ( int argc, char **argv ) {
+
+	if (argc != 2) {
+		waitforkey_usage ( argv, "Wrong number of arguments" );
+		return 1;
+	}
+
+	unsigned int delay = strtoul ( argv[1], &argv[1], 0 );
+	if (*argv[1]) {
+		waitforkey_usage ( argv, "Invalid character" );
+		return 1;
+	}
+
+	return ! shell_banner_custom ( delay, "Press CTRL-B to continue" );
+}
+
+struct command waitforkey_command __command = {
+	.name = "waitforkey",
+	.exec = waitforkey_exec,
+};
diff -Naur work_old/gpxe-1.0.0/src/hci/shell_banner.c work/gpxe-1.0.0/src/hci/shell_banner.c
--- work_old/gpxe-1.0.0/src/hci/shell_banner.c	2010-04-21 10:28:02.000000000 +0200
+++ work/gpxe-1.0.0/src/hci/shell_banner.c	2010-04-21 10:28:16.000000000 +0200
@@ -19,6 +19,7 @@
 FILE_LICENCE ( GPL2_OR_LATER );
 
 #include <stdio.h>
+#include <string.h>
 #include <console.h>
 #include <unistd.h>
 #include <config/general.h>
@@ -37,14 +38,30 @@
  * @ret	enter_shell		User wants to enter shell
  */
 int shell_banner ( void ) {
+      return shell_banner_custom ( BANNER_TIMEOUT, "Press Ctrl-B for the gPXE command line..." );
+}
+
+/**
+ * Print shell banner and prompt for shell entry
+ *
+ * @arg delay                 Seconds to wait before aborting
+ * @arg message                       String to display on screen
+ * @ret       enter_shell             User pressed a key
+ */
+int shell_banner_custom ( const int delay, const char* message ) {
 	int enter_shell = 0;
 	int wait_count;
 	int key;
+	unsigned int i;
 
-	printf ( "\nPress Ctrl-B for the gPXE command line..." );
+        if ( delay <=  0 ) {
+	                return enter_shell;
+        }
+
+	printf ( "\n%s", message );
 
 	/* Wait for key */
-	for ( wait_count = 0 ; wait_count < BANNER_TIMEOUT ; wait_count++ ) {
+	for ( wait_count = 0 ; wait_count < delay ; wait_count++ ) {
 		if ( iskey() ) {
 			key = getchar();
 			if ( key == CTRL_B )
@@ -55,7 +72,11 @@
 	}
 
 	/* Clear the "Press Ctrl-B" line */
-	printf ( "\r                                         \r" );
+	printf ( "\r" );
+	for ( i = 0 ; i < strlen(message) ; i++ ) {
+		printf ( " " );
+	}
+	printf ( "\r" );
 
 	return enter_shell;
 }
diff -Naur work_old/gpxe-1.0.0/src/include/gpxe/shell_banner.h work/gpxe-1.0.0/src/include/gpxe/shell_banner.h
--- work_old/gpxe-1.0.0/src/include/gpxe/shell_banner.h	2010-04-21 10:28:02.000000000 +0200
+++ work/gpxe-1.0.0/src/include/gpxe/shell_banner.h	2010-04-21 10:29:30.000000000 +0200
@@ -10,5 +10,6 @@
 FILE_LICENCE ( GPL2_OR_LATER );
 
 extern int shell_banner ( void );
+extern int shell_banner_custom ( const int delay, const char* message );
 
 #endif /* _GPXE_SHELL_BANNER_H */
