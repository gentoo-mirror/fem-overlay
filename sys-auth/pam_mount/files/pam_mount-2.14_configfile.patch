--- doc/options.txt
+++ doc/options.txt
@@ -26,3 +26,7 @@
 disable_propagate_password
 	Enable/disable propagation of the interactively-input password
 	to PAM modules following in the stack.
+
+configfile=/etc/security/pam_mount.conf.xml (default)
+	Specify config file to use. For OpenBSD, NetBSD and Apple the default
+	config file is /etc/pam_mount.conf.xml.
--- src/pam_mount.c
+++ src/pam_mount.c
@@ -46,6 +46,7 @@
 
 struct pam_args {
 	bool get_pw_from_pam, get_pw_interactive, propagate_pw;
+	char *configfile;
 };
 
 /* Functions */
@@ -81,6 +82,7 @@
 	Args.get_pw_from_pam    = true;
 	Args.get_pw_interactive = true;
 	Args.propagate_pw       = true;
+	Args.configfile         = CONFIGFILE;
 
 	for (i = 0; i < argc; ++i) {
 		if (strcasecmp("enable_pam_password", argv[i]) == 0)
@@ -97,7 +99,10 @@
 			Args.propagate_pw = false;
 		else if (strcasecmp("debug", argv[i]) == 0)
 			Config.debug = 1;
-		else
+		else if (strncasecmp("configfile=", argv[i], 11) == 0) {
+			Args.configfile =  malloc(sizeof(char)*(strlen(argv[i])-11+1));
+			strncpy(Args.configfile, argv[i]+11, strlen(argv[i])-11+1);
+		} else
 			w4rn("unknown pam_mount option \"%s\"\n", argv[i]);
 	}
 }
@@ -273,7 +278,7 @@
 	 * disappears (valgrind)
 	 */
 	Config.user = relookup_user(pam_user);
-	if (!readconfig(CONFIGFILE, true, &Config))
+	if (!readconfig(Args.configfile, true, &Config))
 		return PAM_SERVICE_ERR;
 
 	/* reinitialize after @Debug may have changed */
