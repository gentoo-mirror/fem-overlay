diff -crB pam_radius-1.3.17/pam_radius_auth.c pam_radius-1.3.17-r1/pam_radius_auth.c
*** pam_radius-1.3.17/pam_radius_auth.c	Mon Oct  3 16:00:31 2011
--- pam_radius-1.3.17-r1/pam_radius_auth.c	Mon Oct  3 16:51:46 2011
***************
*** 134,139 ****
--- 134,142 ----
        } else {
  	conf->client_id = (char *) *argv+10; /* point to the client-id */
        }
+     } else if (!strncmp(*argv, "realm=", 6)) {
+       conf->client_realm = (char *) *argv+6; /* point to the client-realm */
+ 
      } else if (!strcmp(*argv, "accounting_bug")) {
        conf->accounting_bug = TRUE;
  
***************
*** 1061,1066 ****
--- 1064,1070 ----
  PAM_EXTERN int 
  pam_sm_authenticate(pam_handle_t *pamh,int flags,int argc,CONST char **argv)
  {
+   char *user_and_realm;
    CONST char *user;
    CONST char **userinfo;
    char *password = NULL;
***************
*** 1074,1082 ****
--- 1078,1089 ----
    AUTH_HDR *request = (AUTH_HDR *) send_buffer;
    AUTH_HDR *response = (AUTH_HDR *) recv_buffer;
    radius_conf_t config;
+   int realm_specified = 0;
  
    ctrl = _pam_parse(argc, argv, &config);
  
+   realm_specified = strlen(config.client_realm);
+ 
    /* grab the user name */
    retval = pam_get_user(pamh, &user, NULL);
    PAM_FAIL_CHECK;
***************
*** 1093,1098 ****
--- 1100,1113 ----
    }
    DPRINT(LOG_DEBUG, "Got user name %s", user);
  
+   if (realm_specified) {
+     user_and_realm = malloc(strlen(user) + MAXPWNAM); /* making maxlen of realm value MAXPWNAM seems reasonable. */
+     memset(user_and_realm, 0, strlen(user_and_realm));
+     strncat(user_and_realm,user,strlen(user));
+     strncat(user_and_realm,"@",1);
+     strncat(user_and_realm,config.client_realm,strlen(config.client_realm));
+   }
+ 
    if (ctrl & PAM_RUSER_ARG) {
      retval = pam_get_item(pamh, PAM_RUSER, (CONST void **) &userinfo);
      PAM_FAIL_CHECK;
***************
*** 1155,1161 ****
      }
    } /* end of password == NULL */
  
!   build_radius_packet(request, user, password, &config);
    /* not all servers understand this service type, but some do */
    add_int_attribute(request, PW_USER_SERVICE_TYPE, PW_AUTHENTICATE_ONLY);
  
--- 1170,1180 ----
      }
    } /* end of password == NULL */
  
!   if (realm_specified) {
!     build_radius_packet(request, user_and_realm, password, &config);
!   } else {
!     build_radius_packet(request, user, password, &config);
!   }
    /* not all servers understand this service type, but some do */
    add_int_attribute(request, PW_USER_SERVICE_TYPE, PW_AUTHENTICATE_ONLY);
  
***************
*** 1216,1222 ****
      retval = rad_converse(pamh, PAM_PROMPT_ECHO_ON, challenge, &resp2challenge);
  
      /* now that we've got a response, build a new radius packet */
!     build_radius_packet(request, user, resp2challenge, &config);
      /* request->code is already PW_AUTHENTICATION_REQUEST */
      request->id++;		/* one up from the request */
  
--- 1235,1245 ----
      retval = rad_converse(pamh, PAM_PROMPT_ECHO_ON, challenge, &resp2challenge);
  
      /* now that we've got a response, build a new radius packet */
!     if (realm_specified) {
!       build_radius_packet(request, user_and_realm, resp2challenge, &config);
!     } else {
!       build_radius_packet(request, user, resp2challenge, &config);
!     }
      /* request->code is already PW_AUTHENTICATION_REQUEST */
      request->id++;		/* one up from the request */
  
***************
*** 1246,1252 ****
      _pam_log(LOG_DEBUG, "authentication %s"
  	     , retval==PAM_SUCCESS ? "succeeded":"failed" );
    }
!   
    close(config.sockfd);
    cleanup(config.server);
    _pam_forget(password);
--- 1269,1278 ----
      _pam_log(LOG_DEBUG, "authentication %s"
  	     , retval==PAM_SUCCESS ? "succeeded":"failed" );
    }
!   /* don't forget to free user/realm string */
!   if (strlen(user_and_realm)) {
!     free(user_and_realm);
!   }
    close(config.sockfd);
    cleanup(config.server);
    _pam_forget(password);
***************
*** 1284,1292 ****
--- 1310,1320 ----
  		    int argc, CONST char **argv,
  		    int status)
  {
+   char *user_and_realm; /* Need non-const user to add realm info */
    CONST char *user;
    int ctrl;
    int retval = PAM_AUTH_ERR;
+   int realm_specified = 0;
  
    char recv_buffer[4096];
    char send_buffer[4096];
***************
*** 1295,1300 ****
--- 1323,1337 ----
    radius_conf_t config;
  
    ctrl = _pam_parse(argc, argv, &config);
+   realm_specified = strlen(config.client_realm);
+ 
+   if(realm_specified) {
+     user_and_realm = malloc(strlen(user) + MAXPWNAM); /* making maxlen of realm value MAXPWNAM seems reasonable. */
+     memset(user_and_realm, 0, strlen(user_and_realm));
+     strncat(user_and_realm,user,strlen(user));
+     strncat(user_and_realm,"@",1);
+     strncat(user_and_realm,config.client_realm,strlen(config.client_realm));
+   }
  
    /* grab the user name */
    retval = pam_get_user(pamh, &user, NULL);
***************
*** 1331,1337 ****
    get_random_vector(request->vector);
    request->id = request->vector[0]; /* this should be evenly distributed */
  
!   build_radius_packet(request, user, NULL, &config);
  
    add_int_attribute(request, PW_ACCT_STATUS_TYPE, status);
  
--- 1368,1378 ----
    get_random_vector(request->vector);
    request->id = request->vector[0]; /* this should be evenly distributed */
  
!   if(realm_specified) {
!     build_radius_packet(request, user_and_realm, NULL, &config);
!   } else {
!     build_radius_packet(request, user, NULL, &config);
!   }
  
    add_int_attribute(request, PW_ACCT_STATUS_TYPE, status);
  
***************
*** 1356,1361 ****
--- 1397,1406 ----
      goto error;
    }
  
+   if(strlen(user_and_realm)) {
+     free(user_and_realm);
+   }
+ 
    retval = PAM_SUCCESS;
  
  error:
***************
*** 1387,1392 ****
--- 1432,1438 ----
  PAM_EXTERN int
  pam_sm_chauthtok(pam_handle_t *pamh, int flags, int argc, CONST char **argv)
  {
+   char *user_and_realm; /* Need non-const user to add realm info */
    CONST char *user;
    char *password = NULL;
    char *new_password = NULL;
***************
*** 1394,1399 ****
--- 1440,1446 ----
    int ctrl;
    int retval = PAM_AUTHTOK_ERR;
    int attempts;
+   int realm_specified = 0;
  
    char recv_buffer[4096];
    char send_buffer[4096];
***************
*** 1402,1407 ****
--- 1449,1457 ----
    radius_conf_t config;
  
    ctrl = _pam_parse(argc, argv, &config);
+   if (strlen(config.client_realm) > 0) {
+     realm_specified = 1;
+   }
  
    /* grab the user name */
    retval = pam_get_user(pamh, &user, NULL);
***************
*** 1413,1418 ****
--- 1463,1476 ----
      return PAM_USER_UNKNOWN;
    }
  
+   /* now add the realm to the user name if a realm has been specified */
+   if (realm_specified) {
+     user_and_realm = malloc(strlen(user) + MAXPWNAM); /* making maxlen of realm value MAXPWNAM seems reasonable. */
+     memset(user_and_realm, 0, strlen(user_and_realm));
+     strncat(user_and_realm,user,strlen(user));
+     strncat(user_and_realm,"@",1);
+   }
+ 
    /*
     * Get the IP address of the authentication server
     * Then, open a socket, and bind it to a port
***************
*** 1463,1469 ****
      get_random_vector(request->vector);
      request->id = request->vector[0]; /* this should be evenly distributed */
      
!     build_radius_packet(request, user, password, &config);
      add_int_attribute(request, PW_USER_SERVICE_TYPE, PW_AUTHENTICATE_ONLY);
      
      retval = talk_radius(&config, request, response, password, NULL, 1);
--- 1521,1531 ----
      get_random_vector(request->vector);
      request->id = request->vector[0]; /* this should be evenly distributed */
      
!     if (realm_specified) {
!       build_radius_packet(request, user_and_realm, password, &config);
!     } else {
!       build_radius_packet(request, user, password, &config);
!     }
      add_int_attribute(request, PW_USER_SERVICE_TYPE, PW_AUTHENTICATE_ONLY);
      
      retval = talk_radius(&config, request, response, password, NULL, 1);
***************
*** 1566,1572 ****
      _pam_forget(config.server->secret);
      config.server->secret = strdup(password); /* it's free'd later */
  
!     build_radius_packet(request, user, new_password, &config);
      add_password(request, PW_OLD_PASSWORD, password, password);
      
      retval = talk_radius(&config, request, response, new_password, password, 1);
--- 1628,1638 ----
      _pam_forget(config.server->secret);
      config.server->secret = strdup(password); /* it's free'd later */
  
!     if (realm_specified) {
!       build_radius_packet(request, user_and_realm, new_password, &config);
!     } else {
!       build_radius_packet(request, user, new_password, &config);
!     }
      add_password(request, PW_OLD_PASSWORD, password, password);
      
      retval = talk_radius(&config, request, response, new_password, password, 1);
***************
*** 1600,1605 ****
--- 1666,1676 ----
      _pam_log(LOG_DEBUG, "password change %s"
  	     , retval==PAM_SUCCESS ? "succeeded":"failed" );
    }
+ 
+   /* don't forget to free user/realm string */
+   if (strlen(user_and_realm)) {
+     free(user_and_realm);
+   }
    
    close(config.sockfd);
    cleanup(config.server);
diff -crB pam_radius-1.3.17/pam_radius_auth.h pam_radius-1.3.17-r1/pam_radius_auth.h
*** pam_radius-1.3.17/pam_radius_auth.h	Mon Mar 26 07:35:31 2007
--- pam_radius-1.3.17-r1/pam_radius_auth.h	Mon Oct  3 17:25:04 2011
***************
*** 49,54 ****
--- 49,55 ----
    int retries;
    int localifdown;
    char *client_id;
+   char *client_realm;
    int accounting_bug;
    int sockfd;
    int debug;
