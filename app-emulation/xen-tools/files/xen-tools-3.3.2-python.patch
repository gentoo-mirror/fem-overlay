# Source: http://lists.xensource.com/archives/html/xen-devel/2009-05/msg00477.html
# modified-by: Marcel Pennewiss <gentoo@pennewiss.de>
Avoid DeprecationWarnings in python 2.6.
Use hashlib.sha1 instead of sha.sha, and set instead of sets.Set.
If import fails (as it will on older pythons), fall back to the
old types.

--- xen-3.3.2/tools/python/xen/util/acmpolicy.py.orig	2009-11-03 10:49:43.000000000 +0100
+++ xen-3.3.2/tools/python/xen/util/acmpolicy.py	2009-11-03 10:51:24.000000000 +0100
@@ -17,12 +17,19 @@
 #============================================================================
 
 import os
-import sha
 import stat
 import array
 import struct
 import shutil
 import commands
+
+# sha is deprecated as of python 2.6
+try:
+    from hashlib import sha1
+except ImportError:
+    # but hashlib was only added in python 2.5
+    from sha import new as sha1
+
 from xml.dom import minidom, Node
 from xen.xend.XendLogging import log
 from xen.util import xsconstants, bootloader, mkdir
@@ -1103,7 +1110,7 @@
 
     def hash(self):
         """ Calculate a SAH1 hash of the XML policy """
-        return sha.sha(self.toxml())
+        return sha1(self.toxml())
 
     def save(self):
         ### Save the XML policy into a file ###
--- xen-3.3.2/tools/python/xen/xend/XendAPI.py.orig	2009-11-03 10:45:46.000000000 +0100
+++ xen-3.3.2/tools/python/xen/xend/XendAPI.py	2009-11-03 10:49:09.000000000 +0100
@@ -18,7 +18,6 @@
 import inspect
 import os
 import Queue
-import sets
 import string
 import sys
 import traceback
@@ -26,6 +25,12 @@
 import time
 import xmlrpclib
 
+# sets is deprecated as of python 2.6, but set is unavailable in 2.3
+try:
+    set
+except NameError:
+    from sets import Set as set
+
 import XendDomain, XendDomainInfo, XendNode, XendDmesg
 import XendLogging, XendTaskManager, XendAPIStore
 
@@ -117,14 +122,15 @@
 def event_register(session, reg_classes):
     if session not in event_registrations:
         event_registrations[session] = {
-            'classes' : sets.Set(),
+            'classes' : set(),
             'queue'   : Queue.Queue(EVENT_QUEUE_LENGTH),
             'next-id' : 1
             }
     if not reg_classes:
         reg_classes = classes
     if hasattr(set, 'union_update'):
-        event_registrations[session]['classes'].union_update(reg_classes)
+        sessionclasses = event_registrations[session]['classes']
+        sessionclasses.union_update(reg_classes)
     else:
         event_registrations[session]['classes'].update(reg_classes)
 
