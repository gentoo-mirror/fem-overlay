=== configure.in
==================================================================
--- configure.in	2009-06-27 02:14:47.000000000 +0200
+++ configure.in	2009-07-09 15:05:02.000000000 +0200
@@ -19,10 +19,6 @@
 
 AC_INIT([PostgreSQL], [8.4.0], [pgsql-bugs@postgresql.org])
 
-m4_if(m4_defn([m4_PACKAGE_VERSION]), [2.61], [], [m4_fatal([Autoconf version 2.61 is required.
-Untested combinations of 'autoconf' and PostgreSQL versions are not
-recommended.  You can remove the check from 'configure.in' but it is then
-your responsibility whether the result works or not.])])
 AC_COPYRIGHT([Copyright (c) 1996-2009, PostgreSQL Global Development Group])
 AC_CONFIG_SRCDIR([src/backend/access/common/heaptuple.c])
 AC_CONFIG_AUX_DIR(config)
=== src/include/storage/s_lock.h
==================================================================
--- src/include/storage/s_lock.h	2009-01-01 18:24:01.000000000 +0100
+++ src/include/storage/s_lock.h	2009-07-09 15:03:08.000000000 +0200
@@ -298,6 +298,29 @@
 
 #endif	 /* __s390__ || __s390x__ */
 
+#if defined(__sh__)
+#define HAS_TEST_AND_SET
+
+typedef unsigned char slock_t;
+
+#define TAS(lock) tas(lock)
+
+static __inline__ int
+tas(volatile slock_t *lock)
+{
+	register int _res = 1;
+
+	__asm__ __volatile__(
+		"tas.b	@%1\n\t"
+		"movt	%0\n\t"
+		"xor	#1,%0"
+:		"=z"(_res)
+:		"r"(lock)
+:		"t","memory");
+	return _res;
+}
+
+#endif	 /* __sh__ */
 
 #if defined(__sparc__)		/* Sparc */
 #define HAS_TEST_AND_SET
=== src/makefiles/Makefile.darwin
==================================================================
--- src/makefiles/Makefile.darwin	2008-11-14 11:22:47.000000000 +0100
+++ src/makefiles/Makefile.darwin	2009-07-09 15:07:11.000000000 +0200
@@ -5,7 +5,15 @@
 CFLAGS_SL =
 
 ifdef PGXS
+ifdef PGXS_IN_SERVER
+ifndef PGXS_WITH_SERVER
+BE_DLLLIBS= -bundle_loader $(top_builddir)/src/backend/postgres
+else
+BE_DLLLIBS= -bundle_loader ${PGXS_WITH_SERVER}
+endif
+else
 BE_DLLLIBS= -bundle_loader $(bindir)/postgres
+endif
 else
 BE_DLLLIBS= -bundle_loader $(top_builddir)/src/backend/postgres
 endif
