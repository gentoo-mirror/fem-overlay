diff -uwbr ffmpeg-2.8.orig/libavdevice/decklink_common_c.h ffmpeg-2.8/libavdevice/decklink_common_c.h
--- ffmpeg-2.8.orig/libavdevice/decklink_common_c.h	2015-09-09 01:17:46.000000000 +0000
+++ ffmpeg-2.8/libavdevice/decklink_common_c.h	2015-12-15 23:14:57.306357559 +0000
@@ -29,5 +29,6 @@
     int list_formats;
     double preroll;
     int v210;
+    int audio_channels;
 };
 
diff -uwbr ffmpeg-2.8.orig/libavdevice/decklink_dec_c.c ffmpeg-2.8/libavdevice/decklink_dec_c.c
--- ffmpeg-2.8.orig/libavdevice/decklink_dec_c.c	2015-09-09 01:17:46.000000000 +0000
+++ ffmpeg-2.8/libavdevice/decklink_dec_c.c	2015-12-15 23:32:04.024696644 +0000
@@ -32,6 +32,7 @@
     { "list_devices", "list available devices"  , OFFSET(list_devices), AV_OPT_TYPE_INT   , { .i64 = 0   }, 0, 1, DEC },
     { "list_formats", "list supported formats"  , OFFSET(list_formats), AV_OPT_TYPE_INT   , { .i64 = 0   }, 0, 1, DEC },
     { "bm_v210",      "v210 10 bit per channel" , OFFSET(v210),         AV_OPT_TYPE_INT   , { .i64 = 0   }, 0, 1, DEC },
+    { "ac",           "number of audio channels", OFFSET(audio_channels), AV_OPT_TYPE_INT , { .i64 = 2   }, 2, 16, DEC },
     { NULL },
 };
 
diff -uwbr ffmpeg-2.8.orig/libavdevice/decklink_dec.cpp ffmpeg-2.8/libavdevice/decklink_dec.cpp
--- ffmpeg-2.8.orig/libavdevice/decklink_dec.cpp	2015-09-09 01:17:46.000000000 +0000
+++ ffmpeg-2.8/libavdevice/decklink_dec.cpp	2015-12-16 00:27:01.547247965 +0000
@@ -381,6 +381,17 @@
     ctx->preroll      = cctx->preroll;
     cctx->ctx = ctx;
 
+    /* Check audio channel option for valid values: 2, 8 or 16 */
+    switch (cctx->audio_channels) {
+        case 2:
+        case 8:
+        case 16:
+            break;
+        default:
+            av_log(avctx, AV_LOG_ERROR, "Value of channels option must be one of 2, 8 or 16\n");
+            return AVERROR(EINVAL);
+    }
+
     iter = CreateDeckLinkIteratorInstance();
     if (!iter) {
         av_log(avctx, AV_LOG_ERROR, "Could not create DeckLink iterator\n");
@@ -449,19 +460,6 @@
 
     itermode->Release();
 
-    /* Setup streams. */
-    st = avformat_new_stream(avctx, NULL);
-    if (!st) {
-        av_log(avctx, AV_LOG_ERROR, "Cannot add stream\n");
-        goto error;
-    }
-    st->codec->codec_type  = AVMEDIA_TYPE_AUDIO;
-    st->codec->codec_id    = AV_CODEC_ID_PCM_S16LE;
-    st->codec->sample_rate = bmdAudioSampleRate48kHz;
-    st->codec->channels    = 2;
-    avpriv_set_pts_info(st, 64, 1, 1000000);  /* 64 bits pts in us */
-    ctx->audio_st=st;
-
     st = avformat_new_stream(avctx, NULL);
     if (!st) {
         av_log(avctx, AV_LOG_ERROR, "Cannot add stream\n");
@@ -488,7 +486,22 @@
 
     ctx->video_st=st;
 
-    result = ctx->dli->EnableAudioInput(bmdAudioSampleRate48kHz, bmdAudioSampleType16bitInteger, 2);
+    /* Setup streams. */
+    st = avformat_new_stream(avctx, NULL);
+    if (!st) {
+        av_log(avctx, AV_LOG_ERROR, "Cannot add stream\n");
+        goto error;
+    }
+    st->codec->codec_type  = AVMEDIA_TYPE_AUDIO;
+    st->codec->codec_id    = AV_CODEC_ID_PCM_S16LE;
+    st->codec->sample_rate = bmdAudioSampleRate48kHz;
+    st->codec->channels    = cctx->audio_channels;
+    avpriv_set_pts_info(st, 64, 1, 1000000);  /* 64 bits pts in us */
+
+    ctx->audio_st=st;
+
+    av_log(avctx, AV_LOG_VERBOSE, "Using %d input audio channels\n", st->codec->channels);
+    result = ctx->dli->EnableAudioInput(bmdAudioSampleRate48kHz, bmdAudioSampleType16bitInteger, st->codec->channels);
 
     if (result != S_OK) {
         av_log(avctx, AV_LOG_ERROR, "Cannot enable audio input\n");
