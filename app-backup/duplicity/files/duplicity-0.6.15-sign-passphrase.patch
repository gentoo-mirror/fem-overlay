--- duplicity.old   2011-10-05 08:18:29.000000000 +0200
+++ duplicity       2011-10-05 08:19:36.000000000 +0200
@@ -90,15 +90,15 @@
     ## if signing key is also an encryption key assume that the passphrase is identical
     if ( for_signing
          and globals.gpg_profile.sign_key in globals.gpg_profile.recipients
-         and globals.gpg_profile.passphrase is not None ):
-        log.Notice(_("Reuse already set PASSPHRASE as SIGNING_PASSPHRASE"))
-        return globals.gpg_profile.passphrase
+         and 'PASSPHRASE' in os.environ ):
+        log.Notice(_("Reuse configured PASSPHRASE as SIGN_PASSPHRASE"))
+        return os.environ['PASSPHRASE']
     ## if one encryption key is also the signing key assume that the passphrase is identical
     if ( not for_signing
          and globals.gpg_profile.sign_key in globals.gpg_profile.recipients
-         and globals.gpg_profile.signing_passphrase is not None ):
-        log.Notice(_("Reuse already set SIGNING_PASSPHRASE as PASSPHRASE"))
-        return globals.gpg_profile.signing_passphrase
+         and 'SIGN_PASSPHRASE' in os.environ ):
+        log.Notice(_("Reuse configured SIGN_PASSPHRASE as PASSPHRASE"))
+        return os.environ['SIGN_PASSPHRASE']
 
     # Next, verify we need to ask the user
 
@@ -1268,7 +1268,7 @@
         # the sign key can have a different passphrase than the encrypt
         # key, therefore request a passphrase
         if globals.gpg_profile.sign_key:
-            globals.gpg_profile.signing_passphrase = get_passphrase(3, action, True)
+            globals.gpg_profile.signing_passphrase = get_passphrase(1, action, True)
 
         # if there are no recipients (no --encrypt-key), it must be a
         # symmetric key. Therefore, confirm the passphrase

