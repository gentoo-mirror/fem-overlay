--- duplicity/backends/ftpsbackend.py
+++ duplicity/backends/ftpsbackend.py
@@ -79,7 +79,11 @@
         os.write(self.tempfile, "set net:timeout %s\n" % globals.timeout)
         os.write(self.tempfile, "set net:max-retries %s\n" % globals.num_retries)
         os.write(self.tempfile, "set ftp:passive-mode %s\n" % self.conn_opt)
-        os.write(self.tempfile, "open %s ftps://%s\n" % (self.portflag, self.parsed_url.hostname))
+        if self.parsed_url.scheme == 'ftps':
+            os.write(self.tempfile, "open %s ftps://%s\n" % (self.portflag, self.parsed_url.hostname))
+        elif self.parsed_url.scheme == 'ftpes':
+            os.write(self.tempfile, "set ftp:ssl-force true\n")
+            os.write(self.tempfile, "open %s %s\n" % (self.portflag, self.parsed_url.hostname))
         # allow .netrc auth by only setting user/pass when user was actually given
         if self.parsed_url.username:
             os.write(self.tempfile, "user %s %s\n" % (self.parsed_url.username, self.password))
@@ -125,3 +129,4 @@
             self.popen_persist(commandline)
 
 duplicity.backend.register_backend("ftps", FTPSBackend)
+duplicity.backend.register_backend("ftpes", FTPSBackend)
--- duplicity/backend.py
+++ duplicity/backend.py
@@ -186,6 +186,7 @@
             # todo: eliminate the need for backend specific hacking here completely.
             urlparser.uses_netloc = ['ftp',
                                      'ftps',
+                                     'ftpes',
                                      'hsi',
                                      'rsync',
                                      's3',
--- duplicity/urlparse_2_5.py
+++ duplicity/urlparse_2_5.py
@@ -10,21 +10,21 @@
            "urlsplit", "urlunsplit"]
 
 # A classification of schemes ('' means apply by default)
-uses_relative = ['ftp', 'ftps', 'http', 'gopher', 'nntp',
+uses_relative = ['ftp', 'ftps', 'ftpes',  'http', 'gopher', 'nntp',
                  'wais', 'file', 'https', 'shttp', 'mms',
                  'prospero', 'rtsp', 'rtspu', '', 'sftp', 'imap', 'imaps']
-uses_netloc = ['ftp', 'ftps', 'http', 'gopher', 'nntp', 'telnet',
+uses_netloc = ['ftp', 'ftps', 'ftpes', 'http', 'gopher', 'nntp', 'telnet',
                'wais', 'file', 'mms', 'https', 'shttp',
                'snews', 'prospero', 'rtsp', 'rtspu', 'rsync', '',
                'svn', 'svn+ssh', 'sftp', 'imap', 'imaps']
 non_hierarchical = ['gopher', 'hdl', 'mailto', 'news',
                     'telnet', 'wais', 'snews', 'sip', 'sips', 'imap', 'imaps']
-uses_params = ['ftp', 'ftps', 'hdl', 'prospero', 'http',
+uses_params = ['ftp', 'ftps', 'ftpes', 'hdl', 'prospero', 'http',
                'https', 'shttp', 'rtsp', 'rtspu', 'sip', 'sips',
                'mms', '', 'sftp', 'imap', 'imaps']
 uses_query = ['http', 'wais', 'https', 'shttp', 'mms',
               'gopher', 'rtsp', 'rtspu', 'sip', 'sips', 'imap', 'imaps', '']
-uses_fragment = ['ftp', 'ftps', 'hdl', 'http', 'gopher', 'news',
+uses_fragment = ['ftp', 'ftps', 'ftpes', 'hdl', 'http', 'gopher', 'news',
                  'nntp', 'wais', 'https', 'shttp', 'snews',
                  'file', 'prospero', '']
 
