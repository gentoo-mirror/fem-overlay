From: Marcel Pennewiss <gentoo@pennewiss.de>
Date: Mon Jul 12 23:17:32 CEST 2012
Subject: add verbose to make

backported patch from git-repository to add verbose to
build process

--- HomerBuild/MakeCore
+++ HomerBuild/MakeCore
@@ -27,13 +27,19 @@
 ifneq ($(INSTALL_LIBDIR),)
 	OPTION_INSTALL_LIBDIR = -DINSTALL_LIBDIR=$(INSTALL_LIBDIR)
 endif
+# Option for cmake: activate verbose makefiles if the command line provides a VERBOSE=1 parameter
+ifeq ($(VERBOSE),2)
+	OPTION_VERBOSE = -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON
+else ifeq ($(VERBOSE),)
+	MAKE_OPTION_SILENCE = -s
+endif
 # Options for cmake: set relocation directory, deactivate special warnings, for MSys32/MinGW32 environment Unix makefiles are created by default
 ifeq ($(BUILD_OS),msys)
-	CMAKE_OPTIONS= -DCMAKE_SKIP_RPATH:BOOL=ON -DRELOCATION_DIR=../../../../bin/ -Wno-dev -G "MSYS Makefiles" $(OPTION_INSTALL_PREFIX) ${OPTION_INSTALL_LIBDIR}
+	CMAKE_OPTIONS= -DCMAKE_SKIP_RPATH:BOOL=ON -DRELOCATION_DIR=../../../../bin/ -Wno-dev -G "MSYS Makefiles" $(OPTION_INSTALL_PREFIX) ${OPTION_INSTALL_LIBDIR} ${OPTION_VERBOSE}
 else
-	CMAKE_OPTIONS= -DCMAKE_SKIP_RPATH:BOOL=ON -DRELOCATION_DIR=../../../../bin/ -Wno-dev $(OPTION_INSTALL_PREFIX) ${OPTION_INSTALL_LIBDIR}
+	CMAKE_OPTIONS= -DCMAKE_SKIP_RPATH:BOOL=ON -DRELOCATION_DIR=../../../../bin/ -Wno-dev $(OPTION_INSTALL_PREFIX) ${OPTION_INSTALL_LIBDIR} ${OPTION_VERBOSE}
 endif
-	
+
 ##############################################################
 # build target mappings
 all: default
@@ -87,16 +93,16 @@
 
 
 release32: $(TOP_DIR)/$(BUILD_DIR_RELEASE32)/Makefile
-	@cd $(TOP_DIR)/$(BUILD_DIR_RELEASE32) && $(MAKE) -s
+	@cd $(TOP_DIR)/$(BUILD_DIR_RELEASE32) && $(MAKE) $(MAKE_OPTION_SILENCE)
 
 release: $(TOP_DIR)/$(BUILD_DIR_RELEASE)/Makefile
-	@cd $(TOP_DIR)/$(BUILD_DIR_RELEASE) && $(MAKE) -s
+	@cd $(TOP_DIR)/$(BUILD_DIR_RELEASE) && $(MAKE) $(MAKE_OPTION_SILENCE)
 
 default: $(TOP_DIR)/$(BUILD_DIR_DEFAULT)/Makefile
-	@cd $(TOP_DIR)/$(BUILD_DIR_DEFAULT) && $(MAKE) -s
+	@cd $(TOP_DIR)/$(BUILD_DIR_DEFAULT) && $(MAKE) $(MAKE_OPTION_SILENCE)
 
 debug: $(TOP_DIR)/$(BUILD_DIR_DEBUG)/Makefile
-	@cd $(TOP_DIR)/$(BUILD_DIR_DEBUG) && $(MAKE) -s
+	@cd $(TOP_DIR)/$(BUILD_DIR_DEBUG) && $(MAKE) $(MAKE_OPTION_SILENCE)
 
 install: all
 ifneq ($(INSTALL_PREFIX),)
@@ -104,22 +110,22 @@
 else
 	@echo "##### Installing to default directory"
 endif
-	@cd $(TOP_DIR)/$(BUILD_DIR_DEFAULT) && $(MAKE) -s install
+	@cd $(TOP_DIR)/$(BUILD_DIR_DEFAULT) && $(MAKE) $(MAKE_OPTION_SILENCE) install
 	
 ###############################################################################
 # Targets for building a special sub target in one of our configurations 
 
 %_release32: $(TOP_DIR)/$(BUILD_DIR_RELEASE32)/Makefile
-	@cd $(TOP_DIR)/$(BUILD_DIR_RELEASE32) && $(MAKE) -s $*
+	@cd $(TOP_DIR)/$(BUILD_DIR_RELEASE32) && $(MAKE) $(MAKE_OPTION_SILENCE) $*
 
 %_release: $(TOP_DIR)/$(BUILD_DIR_RELEASE)/Makefile
-	@cd $(TOP_DIR)/$(BUILD_DIR_RELEASE) && $(MAKE) -s $*
+	@cd $(TOP_DIR)/$(BUILD_DIR_RELEASE) && $(MAKE) $(MAKE_OPTION_SILENCE) $*
 
 %_default: $(TOP_DIR)/$(BUILD_DIR_DEFAULT)/Makefile
-	@cd $(TOP_DIR)/$(BUILD_DIR_DEFAULT) && $(MAKE) -s $*
+	@cd $(TOP_DIR)/$(BUILD_DIR_DEFAULT) && $(MAKE) $(MAKE_OPTION_SILENCE) $*
 
 %_debug: $(TOP_DIR)/$(BUILD_DIR_DEBUG)/Makefile
-	@cd $(TOP_DIR)/$(BUILD_DIR_DEBUG) && $(MAKE) -s $*
+	@cd $(TOP_DIR)/$(BUILD_DIR_DEBUG) && $(MAKE) $(MAKE_OPTION_SILENCE) $*
 
 ###############################################################################
 %MakeCore:
@@ -132,12 +138,12 @@
 # catch all unhandled targets
 %: 
 ifneq ($(wildcard $(TOP_DIR)/$(BUILD_DIR_RELEASE)),) 
-	@cd $(TOP_DIR)/$(BUILD_DIR_RELEASE) && $(MAKE) -s $*
+	@cd $(TOP_DIR)/$(BUILD_DIR_RELEASE) && $(MAKE) $(MAKE_OPTION_SILENCE) $*
 endif
 ifneq ($(wildcard $(TOP_DIR)/$(BUILD_DIR_DEFAULT)),) 
-	@cd $(TOP_DIR)/$(BUILD_DIR_DEFAULT) && $(MAKE) -s $*
+	@cd $(TOP_DIR)/$(BUILD_DIR_DEFAULT) && $(MAKE) $(MAKE_OPTION_SILENCE) $*
 endif
 ifneq ($(wildcard $(TOP_DIR)/$(BUILD_DIR_DEBUG)),) 
-	@cd $(TOP_DIR)/$(BUILD_DIR_DEBUG) && $(MAKE) -s $*
+	@cd $(TOP_DIR)/$(BUILD_DIR_DEBUG) && $(MAKE) $(MAKE_OPTION_SILENCE) $*
 endif
 
--- INSTALL
+++ INSTALL
@@ -120,3 +120,23 @@
  Current OS X releases of Homer are built with cmake 2.6 for OS X and Apple's 
  Xcode 3.2.6, which includes both gcc and binutils in current versions.
 
+
+DEVELOPER: debug the build process:
+===================================
+
+ In general, GNU Make supports the parameter "VERBOSE=1". The Homer build system 
+ supports this parameter, too.
+  
+ Get verbose output during build process via:
+
+    > "cd HomerBuild"
+    > "make VERBOSE=1"
+
+ This shows several verbose outputs and often gives a good hint why header files
+ weren't found or why linking failed.
+
+ Get even more verbose output during build process via:
+
+    > "cd HomerBuild"
+    > "make VERBOSE=2"
+  
